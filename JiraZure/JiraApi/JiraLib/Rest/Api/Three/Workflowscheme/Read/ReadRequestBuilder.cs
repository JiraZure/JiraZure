// <auto-generated/>
using JiraLib.Models;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace JiraLib.Rest.Api.Three.Workflowscheme.Read {
    /// <summary>
    /// Builds and executes requests for operations under \rest\api\3\workflowscheme\read
    /// </summary>
    public class ReadRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>
        /// Instantiates a new <see cref="ReadRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ReadRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/workflowscheme/read{?expand*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="ReadRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ReadRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/workflowscheme/read{?expand*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a list of workflow schemes by providing workflow scheme IDs or project IDs.**[Permissions](#permissions) required:** *  *Administer Jira* global permission to access all, including project-scoped, workflow schemes *  *Administer projects* project permissions to access project-scoped workflow schemes
        /// </summary>
        /// <returns>A List&lt;WorkflowSchemeReadResponse&gt;</returns>
        /// <param name="body">The workflow scheme read request body.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<WorkflowSchemeReadResponse>?> PostAsync(WorkflowSchemeReadRequest body, Action<RequestConfiguration<ReadRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<WorkflowSchemeReadResponse>> PostAsync(WorkflowSchemeReadRequest body, Action<RequestConfiguration<ReadRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<WorkflowSchemeReadResponse>(requestInfo, WorkflowSchemeReadResponse.CreateFromDiscriminatorValue, default,cancellationToken: cancellationToken).ConfigureAwait(false);
            return collectionResult?.ToList();
        }
        /// <summary>
        /// Returns a list of workflow schemes by providing workflow scheme IDs or project IDs.**[Permissions](#permissions) required:** *  *Administer Jira* global permission to access all, including project-scoped, workflow schemes *  *Administer projects* project permissions to access project-scoped workflow schemes
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The workflow scheme read request body.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(WorkflowSchemeReadRequest body, Action<RequestConfiguration<ReadRequestBuilderPostQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(WorkflowSchemeReadRequest body, Action<RequestConfiguration<ReadRequestBuilderPostQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="ReadRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public ReadRequestBuilder WithUrl(string rawUrl)
        {
            return new ReadRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a list of workflow schemes by providing workflow scheme IDs or project IDs.**[Permissions](#permissions) required:** *  *Administer Jira* global permission to access all, including project-scoped, workflow schemes *  *Administer projects* project permissions to access project-scoped workflow schemes
        /// </summary>
        public class ReadRequestBuilderPostQueryParameters 
        {
            /// <summary>Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include: *  `workflows.usages` Returns the project and issue types that each workflow in the workflow scheme is associated with.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string Expand { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ReadRequestBuilderPostRequestConfiguration : RequestConfiguration<ReadRequestBuilderPostQueryParameters> 
        {
        }
    }
}
