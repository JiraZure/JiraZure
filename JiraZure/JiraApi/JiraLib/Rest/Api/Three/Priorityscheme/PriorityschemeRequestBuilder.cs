// <auto-generated/>
using JiraLib.Models;
using JiraLib.Rest.Api.Three.Priorityscheme.Item;
using JiraLib.Rest.Api.Three.Priorityscheme.Mappings;
using JiraLib.Rest.Api.Three.Priorityscheme.Priorities;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace JiraLib.Rest.Api.Three.Priorityscheme {
    /// <summary>
    /// Builds and executes requests for operations under \rest\api\3\priorityscheme
    /// </summary>
    public class PriorityschemeRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The mappings property</summary>
        public MappingsRequestBuilder Mappings
        {
            get => new MappingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The priorities property</summary>
        public PrioritiesRequestBuilder Priorities
        {
            get => new PrioritiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the JiraLib.rest.api.Three.priorityscheme.item collection</summary>
        /// <param name="position">The priority scheme ID.</param>
        /// <returns>A <see cref="WithSchemeItemRequestBuilder"/></returns>
        public WithSchemeItemRequestBuilder this[long position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("schemeId", position);
                return new WithSchemeItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the JiraLib.rest.api.Three.priorityscheme.item collection</summary>
        /// <param name="position">The priority scheme ID.</param>
        /// <returns>A <see cref="WithSchemeItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public WithSchemeItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("schemeId", position);
                return new WithSchemeItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="PriorityschemeRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PriorityschemeRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/priorityscheme{?expand*,maxResults*,onlyDefault*,orderBy*,priorityId*,schemeId*,schemeName*,startAt*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="PriorityschemeRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PriorityschemeRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/priorityscheme{?expand*,maxResults*,onlyDefault*,orderBy*,priorityId*,schemeId*,schemeName*,startAt*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a [paginated](#pagination) list of priority schemes.**[Permissions](#permissions) required:** Permission to access Jira.
        /// </summary>
        /// <returns>A <see cref="PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects?> GetAsync(Action<RequestConfiguration<PriorityschemeRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects> GetAsync(Action<RequestConfiguration<PriorityschemeRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects>(requestInfo, PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a new priority scheme.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        /// </summary>
        /// <returns>A <see cref="PrioritySchemeId"/></returns>
        /// <param name="body">Details of a new priority scheme</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<PrioritySchemeId?> PostAsync(CreatePrioritySchemeDetails body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<PrioritySchemeId> PostAsync(CreatePrioritySchemeDetails body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<PrioritySchemeId>(requestInfo, PrioritySchemeId.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a [paginated](#pagination) list of priority schemes.**[Permissions](#permissions) required:** Permission to access Jira.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<PriorityschemeRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<PriorityschemeRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates a new priority scheme.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Details of a new priority scheme</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(CreatePrioritySchemeDetails body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(CreatePrioritySchemeDetails body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="PriorityschemeRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public PriorityschemeRequestBuilder WithUrl(string rawUrl)
        {
            return new PriorityschemeRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a [paginated](#pagination) list of priority schemes.**[Permissions](#permissions) required:** Permission to access Jira.
        /// </summary>
        public class PriorityschemeRequestBuilderGetQueryParameters 
        {
            /// <summary>A comma separated list of additional information to return. &quot;priorities&quot; will return priorities associated with the priority scheme. &quot;projects&quot; will return projects associated with the priority scheme. `expand=priorities,projects`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string Expand { get; set; }
#endif
            /// <summary>The maximum number of items to return per page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("maxResults")]
            public string? MaxResults { get; set; }
#nullable restore
#else
            [QueryParameter("maxResults")]
            public string MaxResults { get; set; }
#endif
            /// <summary>Whether only the default priority is returned.</summary>
            [QueryParameter("onlyDefault")]
            public bool? OnlyDefault { get; set; }
            /// <summary>The ordering to return the priority schemes by.</summary>
            [Obsolete("This property is deprecated, use OrderByAsGetOrderByQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("orderBy")]
            public string? OrderBy { get; set; }
#nullable restore
#else
            [QueryParameter("orderBy")]
            public string OrderBy { get; set; }
#endif
            /// <summary>The ordering to return the priority schemes by.</summary>
            [QueryParameter("orderBy")]
            public GetOrderByQueryParameterType? OrderByAsGetOrderByQueryParameterType { get; set; }
            /// <summary>A set of priority IDs to filter by. To include multiple IDs, provide an ampersand-separated list. For example, `priorityId=10000&amp;priorityId=10001`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("priorityId")]
            public long?[]? PriorityId { get; set; }
#nullable restore
#else
            [QueryParameter("priorityId")]
            public long?[] PriorityId { get; set; }
#endif
            /// <summary>A set of priority scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `schemeId=10000&amp;schemeId=10001`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("schemeId")]
            public long?[]? SchemeId { get; set; }
#nullable restore
#else
            [QueryParameter("schemeId")]
            public long?[] SchemeId { get; set; }
#endif
            /// <summary>The name of scheme to search for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("schemeName")]
            public string? SchemeName { get; set; }
#nullable restore
#else
            [QueryParameter("schemeName")]
            public string SchemeName { get; set; }
#endif
            /// <summary>The index of the first item to return in a page of results (page offset).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("startAt")]
            public string? StartAt { get; set; }
#nullable restore
#else
            [QueryParameter("startAt")]
            public string StartAt { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class PriorityschemeRequestBuilderGetRequestConfiguration : RequestConfiguration<PriorityschemeRequestBuilderGetQueryParameters> 
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class PriorityschemeRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters> 
        {
        }
    }
}
