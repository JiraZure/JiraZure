// <auto-generated/>
using JiraLib.Models;
using JiraLib.Rest.Api.Three.Project.Item.Archive;
using JiraLib.Rest.Api.Three.Project.Item.Avatar2;
using JiraLib.Rest.Api.Three.Project.Item.Avatar;
using JiraLib.Rest.Api.Three.Project.Item.Avatars;
using JiraLib.Rest.Api.Three.Project.Item.ClassificationLevel;
using JiraLib.Rest.Api.Three.Project.Item.Component;
using JiraLib.Rest.Api.Three.Project.Item.Components;
using JiraLib.Rest.Api.Three.Project.Item.Delete;
using JiraLib.Rest.Api.Three.Project.Item.Email;
using JiraLib.Rest.Api.Three.Project.Item.Features;
using JiraLib.Rest.Api.Three.Project.Item.Hierarchy;
using JiraLib.Rest.Api.Three.Project.Item.Issuesecuritylevelscheme;
using JiraLib.Rest.Api.Three.Project.Item.Notificationscheme;
using JiraLib.Rest.Api.Three.Project.Item.Permissionscheme;
using JiraLib.Rest.Api.Three.Project.Item.Properties;
using JiraLib.Rest.Api.Three.Project.Item.Restore;
using JiraLib.Rest.Api.Three.Project.Item.Role;
using JiraLib.Rest.Api.Three.Project.Item.Roledetails;
using JiraLib.Rest.Api.Three.Project.Item.Securitylevel;
using JiraLib.Rest.Api.Three.Project.Item.Statuses;
using JiraLib.Rest.Api.Three.Project.Item.VersionNamespace;
using JiraLib.Rest.Api.Three.Project.Item.Versions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace JiraLib.Rest.Api.Three.Project.Item {
    /// <summary>
    /// Builds and executes requests for operations under \rest\api\3\project\{projectIdOrKey-id}
    /// </summary>
    public class ProjectIdOrKeyItemRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The archive property</summary>
        public ArchiveRequestBuilder Archive
        {
            get => new ArchiveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The avatar property</summary>
        public AvatarRequestBuilder Avatar
        {
            get => new AvatarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The avatar2 property</summary>
        public Avatar2RequestBuilder Avatar2
        {
            get => new Avatar2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The avatars property</summary>
        public AvatarsRequestBuilder Avatars
        {
            get => new AvatarsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The classificationLevel property</summary>
        public ClassificationLevelRequestBuilder ClassificationLevel
        {
            get => new ClassificationLevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The component property</summary>
        public ComponentRequestBuilder Component
        {
            get => new ComponentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The components property</summary>
        public ComponentsRequestBuilder Components
        {
            get => new ComponentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePath property</summary>
        public DeleteRequestBuilder DeletePath
        {
            get => new DeleteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The email property</summary>
        public EmailRequestBuilder Email
        {
            get => new EmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The features property</summary>
        public FeaturesRequestBuilder Features
        {
            get => new FeaturesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The hierarchy property</summary>
        public HierarchyRequestBuilder Hierarchy
        {
            get => new HierarchyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The issuesecuritylevelscheme property</summary>
        public IssuesecuritylevelschemeRequestBuilder Issuesecuritylevelscheme
        {
            get => new IssuesecuritylevelschemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The notificationscheme property</summary>
        public NotificationschemeRequestBuilder Notificationscheme
        {
            get => new NotificationschemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The permissionscheme property</summary>
        public PermissionschemeRequestBuilder Permissionscheme
        {
            get => new PermissionschemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The properties property</summary>
        public PropertiesRequestBuilder Properties
        {
            get => new PropertiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The restore property</summary>
        public RestoreRequestBuilder Restore
        {
            get => new RestoreRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The role property</summary>
        public RoleRequestBuilder Role
        {
            get => new RoleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roledetails property</summary>
        public RoledetailsRequestBuilder Roledetails
        {
            get => new RoledetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The securitylevel property</summary>
        public SecuritylevelRequestBuilder Securitylevel
        {
            get => new SecuritylevelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The statuses property</summary>
        public StatusesRequestBuilder Statuses
        {
            get => new StatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The version property</summary>
        public VersionRequestBuilder Version
        {
            get => new VersionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The versions property</summary>
        public VersionsRequestBuilder Versions
        {
            get => new VersionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ProjectIdOrKeyItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProjectIdOrKeyItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/project/{projectIdOrKey%2Did}{?enableUndo*,expand*,properties*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="ProjectIdOrKeyItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ProjectIdOrKeyItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rest/api/3/project/{projectIdOrKey%2Did}{?enableUndo*,expand*,properties*}", rawUrl)
        {
        }
        /// <summary>
        /// Deletes a project.You can&apos;t delete a project if it&apos;s archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            await RequestAdapter.SendNoContentAsync(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.This operation can be accessed anonymously.**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
        /// </summary>
        /// <returns>A <see cref="JiraLib.Models.Project"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<JiraLib.Models.Project?> GetAsync(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<JiraLib.Models.Project> GetAsync(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<JiraLib.Models.Project>(requestInfo, JiraLib.Models.Project.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.All parameters are optional in the body of the request. Schemes will only be updated if they are included in the request, any omitted schemes will be left unchanged.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). is only needed when changing the schemes or project key. Otherwise you will only need *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
        /// </summary>
        /// <returns>A <see cref="JiraLib.Models.Project"/></returns>
        /// <param name="body">Details about the project.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<JiraLib.Models.Project?> PutAsync(UpdateProjectDetails body, Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderPutQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<JiraLib.Models.Project> PutAsync(UpdateProjectDetails body, Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderPutQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<JiraLib.Models.Project>(requestInfo, JiraLib.Models.Project.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Deletes a project.You can&apos;t delete a project if it&apos;s archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            return requestInfo;
        }
        /// <summary>
        /// Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.This operation can be accessed anonymously.**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.All parameters are optional in the body of the request. Schemes will only be updated if they are included in the request, any omitted schemes will be left unchanged.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). is only needed when changing the schemes or project key. Otherwise you will only need *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Details about the project.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(UpdateProjectDetails body, Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderPutQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(UpdateProjectDetails body, Action<RequestConfiguration<ProjectIdOrKeyItemRequestBuilderPutQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="ProjectIdOrKeyItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public ProjectIdOrKeyItemRequestBuilder WithUrl(string rawUrl)
        {
            return new ProjectIdOrKeyItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Deletes a project.You can&apos;t delete a project if it&apos;s archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        /// </summary>
        public class ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters 
        {
            /// <summary>Whether this project is placed in the Jira recycle bin where it will be available for restoration.</summary>
            [QueryParameter("enableUndo")]
            public bool? EnableUndo { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ProjectIdOrKeyItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<ProjectIdOrKeyItemRequestBuilderDeleteQueryParameters> 
        {
        }
        /// <summary>
        /// Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.This operation can be accessed anonymously.**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
        /// </summary>
        public class ProjectIdOrKeyItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include: *  `description` The project description. *  `issueTypes` The issue types associated with the project. *  `lead` The project lead. *  `projectKeys` All project keys associated with the project. *  `issueTypeHierarchy` The project issue type hierarchy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string Expand { get; set; }
#endif
            /// <summary>A list of project properties to return for the project. This parameter accepts a comma-separated list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("properties")]
            public string[]? Properties { get; set; }
#nullable restore
#else
            [QueryParameter("properties")]
            public string[] Properties { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ProjectIdOrKeyItemRequestBuilderGetRequestConfiguration : RequestConfiguration<ProjectIdOrKeyItemRequestBuilderGetQueryParameters> 
        {
        }
        /// <summary>
        /// Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.All parameters are optional in the body of the request. Schemes will only be updated if they are included in the request, any omitted schemes will be left unchanged.**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). is only needed when changing the schemes or project key. Otherwise you will only need *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
        /// </summary>
        public class ProjectIdOrKeyItemRequestBuilderPutQueryParameters 
        {
            /// <summary>Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include: *  `description` The project description. *  `issueTypes` The issue types associated with the project. *  `lead` The project lead. *  `projectKeys` All project keys associated with the project.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string Expand { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ProjectIdOrKeyItemRequestBuilderPutRequestConfiguration : RequestConfiguration<ProjectIdOrKeyItemRequestBuilderPutQueryParameters> 
        {
        }
    }
}
