// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// Details of a priority scheme.
    /// </summary>
    public class UpdatePrioritySchemeRequestBean : IParsable 
    {
        /// <summary>The default priority of the scheme.</summary>
        public long? DefaultPriorityId { get; set; }
        /// <summary>The description of the priority scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Instructions to migrate issues.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PriorityMapping? Mappings { get; set; }
#nullable restore
#else
        public PriorityMapping Mappings { get; set; }
#endif
        /// <summary>The name of the priority scheme. Must be unique.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The priorities in the scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UpdatePrioritiesInSchemeRequestBean? Priorities { get; set; }
#nullable restore
#else
        public UpdatePrioritiesInSchemeRequestBean Priorities { get; set; }
#endif
        /// <summary>The projects in the scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UpdateProjectsInSchemeRequestBean? Projects { get; set; }
#nullable restore
#else
        public UpdateProjectsInSchemeRequestBean Projects { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="UpdatePrioritySchemeRequestBean"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static UpdatePrioritySchemeRequestBean CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new UpdatePrioritySchemeRequestBean();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"defaultPriorityId", n => { DefaultPriorityId = n.GetLongValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"mappings", n => { Mappings = n.GetObjectValue<PriorityMapping>(PriorityMapping.CreateFromDiscriminatorValue); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"priorities", n => { Priorities = n.GetObjectValue<UpdatePrioritiesInSchemeRequestBean>(UpdatePrioritiesInSchemeRequestBean.CreateFromDiscriminatorValue); } },
                {"projects", n => { Projects = n.GetObjectValue<UpdateProjectsInSchemeRequestBean>(UpdateProjectsInSchemeRequestBean.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteLongValue("defaultPriorityId", DefaultPriorityId);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<PriorityMapping>("mappings", Mappings);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<UpdatePrioritiesInSchemeRequestBean>("priorities", Priorities);
            writer.WriteObjectValue<UpdateProjectsInSchemeRequestBean>("projects", Projects);
        }
    }
}
