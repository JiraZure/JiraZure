// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// Composed type wrapper for classes <see cref="FunctionOperand"/>, <see cref="KeywordOperand"/>, <see cref="ValueOperand"/>
    /// </summary>
    public class JqlQueryUnitaryOperand : IComposedTypeWrapper, IParsable 
    {
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FunctionOperand"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FunctionOperand? FunctionOperand { get; set; }
#nullable restore
#else
        public JiraLib.Models.FunctionOperand FunctionOperand { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.KeywordOperand"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.KeywordOperand? KeywordOperand { get; set; }
#nullable restore
#else
        public JiraLib.Models.KeywordOperand KeywordOperand { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.ValueOperand"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.ValueOperand? ValueOperand { get; set; }
#nullable restore
#else
        public JiraLib.Models.ValueOperand ValueOperand { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="JqlQueryUnitaryOperand"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JqlQueryUnitaryOperand CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var result = new JqlQueryUnitaryOperand();
            result.FunctionOperand = new JiraLib.Models.FunctionOperand();
            result.KeywordOperand = new JiraLib.Models.KeywordOperand();
            result.ValueOperand = new JiraLib.Models.ValueOperand();
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(FunctionOperand != null || KeywordOperand != null || ValueOperand != null)
            {
                return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(FunctionOperand, KeywordOperand, ValueOperand);
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraLib.Models.FunctionOperand>(null, FunctionOperand, KeywordOperand, ValueOperand);
        }
    }
}
