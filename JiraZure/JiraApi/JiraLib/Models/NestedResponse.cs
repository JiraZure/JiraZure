// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    #pragma warning disable CS1591
    public class NestedResponse : IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Error messages from an operation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.ErrorCollection? ErrorCollection { get; set; }
#nullable restore
#else
        public JiraLib.Models.ErrorCollection ErrorCollection { get; set; }
#endif
        /// <summary>The status property</summary>
        public int? Status { get; set; }
        /// <summary>The warningCollection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.WarningCollection? WarningCollection { get; set; }
#nullable restore
#else
        public JiraLib.Models.WarningCollection WarningCollection { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="NestedResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static NestedResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new NestedResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"errorCollection", n => { ErrorCollection = n.GetObjectValue<JiraLib.Models.ErrorCollection>(JiraLib.Models.ErrorCollection.CreateFromDiscriminatorValue); } },
                {"status", n => { Status = n.GetIntValue(); } },
                {"warningCollection", n => { WarningCollection = n.GetObjectValue<JiraLib.Models.WarningCollection>(JiraLib.Models.WarningCollection.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraLib.Models.ErrorCollection>("errorCollection", ErrorCollection);
            writer.WriteIntValue("status", Status);
            writer.WriteObjectValue<JiraLib.Models.WarningCollection>("warningCollection", WarningCollection);
        }
    }
}
