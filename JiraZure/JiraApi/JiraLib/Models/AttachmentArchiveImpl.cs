// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    #pragma warning disable CS1591
    public class AttachmentArchiveImpl : IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>The list of the items included in the archive.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AttachmentArchiveEntry>? Entries { get; set; }
#nullable restore
#else
        public List<AttachmentArchiveEntry> Entries { get; set; }
#endif
        /// <summary>The number of items in the archive.</summary>
        public int? TotalEntryCount { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="AttachmentArchiveImpl"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AttachmentArchiveImpl CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AttachmentArchiveImpl();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"entries", n => { Entries = n.GetCollectionOfObjectValues<AttachmentArchiveEntry>(AttachmentArchiveEntry.CreateFromDiscriminatorValue)?.ToList(); } },
                {"totalEntryCount", n => { TotalEntryCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<AttachmentArchiveEntry>("entries", Entries);
            writer.WriteIntValue("totalEntryCount", TotalEntryCount);
        }
    }
}
