// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    #pragma warning disable CS1591
    public class DetailedErrorCollection : ApiException, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Map of objects representing additional details for an error</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public DetailedErrorCollection_details? Details { get; set; }
#nullable restore
#else
        public DetailedErrorCollection_details Details { get; set; }
#endif
        /// <summary>The list of error messages produced by this operation. For example, &quot;input parameter &apos;key&apos; must be provided&quot;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ErrorMessages { get; set; }
#nullable restore
#else
        public List<string> ErrorMessages { get; set; }
#endif
        /// <summary>The list of errors by parameter returned by the operation. For example,&quot;projectKey&quot;: &quot;Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.&quot;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public DetailedErrorCollection_errors? Errors { get; set; }
#nullable restore
#else
        public DetailedErrorCollection_errors Errors { get; set; }
#endif
        /// <summary>The primary error message.</summary>
        public override string Message { get => base.Message; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="DetailedErrorCollection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static DetailedErrorCollection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new DetailedErrorCollection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"details", n => { Details = n.GetObjectValue<DetailedErrorCollection_details>(DetailedErrorCollection_details.CreateFromDiscriminatorValue); } },
                {"errorMessages", n => { ErrorMessages = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"errors", n => { Errors = n.GetObjectValue<DetailedErrorCollection_errors>(DetailedErrorCollection_errors.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<DetailedErrorCollection_details>("details", Details);
            writer.WriteCollectionOfPrimitiveValues<string>("errorMessages", ErrorMessages);
            writer.WriteObjectValue<DetailedErrorCollection_errors>("errors", Errors);
        }
    }
}
