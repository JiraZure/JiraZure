// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// Details of changes to a priority scheme that require suggested priority mappings.
    /// </summary>
    public class SuggestedMappingsRequestBean : IParsable 
    {
        /// <summary>The maximum number of results that could be on the page.</summary>
        public int? MaxResults { get; set; }
        /// <summary>The priority changes in the scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public SuggestedMappingsForPrioritiesRequestBean? Priorities { get; set; }
#nullable restore
#else
        public SuggestedMappingsForPrioritiesRequestBean Priorities { get; set; }
#endif
        /// <summary>The project changes in the scheme.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public SuggestedMappingsForProjectsRequestBean? Projects { get; set; }
#nullable restore
#else
        public SuggestedMappingsForProjectsRequestBean Projects { get; set; }
#endif
        /// <summary>The id of the priority scheme.</summary>
        public long? SchemeId { get; set; }
        /// <summary>The index of the first item returned on the page.</summary>
        public long? StartAt { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="SuggestedMappingsRequestBean"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SuggestedMappingsRequestBean CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SuggestedMappingsRequestBean();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"maxResults", n => { MaxResults = n.GetIntValue(); } },
                {"priorities", n => { Priorities = n.GetObjectValue<SuggestedMappingsForPrioritiesRequestBean>(SuggestedMappingsForPrioritiesRequestBean.CreateFromDiscriminatorValue); } },
                {"projects", n => { Projects = n.GetObjectValue<SuggestedMappingsForProjectsRequestBean>(SuggestedMappingsForProjectsRequestBean.CreateFromDiscriminatorValue); } },
                {"schemeId", n => { SchemeId = n.GetLongValue(); } },
                {"startAt", n => { StartAt = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("maxResults", MaxResults);
            writer.WriteObjectValue<SuggestedMappingsForPrioritiesRequestBean>("priorities", Priorities);
            writer.WriteObjectValue<SuggestedMappingsForProjectsRequestBean>("projects", Projects);
            writer.WriteLongValue("schemeId", SchemeId);
            writer.WriteLongValue("startAt", StartAt);
        }
    }
}
