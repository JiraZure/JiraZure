// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// Composed type wrapper for classes <see cref="CompoundClause"/>, <see cref="FieldChangedClause"/>, <see cref="FieldValueClause"/>, <see cref="FieldWasClause"/>
    /// </summary>
    public class JqlQueryClause : IComposedTypeWrapper, IParsable 
    {
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.CompoundClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.CompoundClause? CompoundClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.CompoundClause CompoundClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldChangedClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldChangedClause? FieldChangedClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldChangedClause FieldChangedClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldValueClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldValueClause? FieldValueClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldValueClause FieldValueClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldWasClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldWasClause? FieldWasClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldWasClause FieldWasClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.CompoundClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.CompoundClause? JqlQueryClauseCompoundClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.CompoundClause JqlQueryClauseCompoundClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldChangedClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldChangedClause? JqlQueryClauseFieldChangedClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldChangedClause JqlQueryClauseFieldChangedClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldValueClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldValueClause? JqlQueryClauseFieldValueClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldValueClause JqlQueryClauseFieldValueClause { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="JiraLib.Models.FieldWasClause"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.FieldWasClause? JqlQueryClauseFieldWasClause { get; set; }
#nullable restore
#else
        public JiraLib.Models.FieldWasClause JqlQueryClauseFieldWasClause { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="JqlQueryClause"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JqlQueryClause CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var result = new JqlQueryClause();
            result.CompoundClause = new JiraLib.Models.CompoundClause();
            result.FieldChangedClause = new JiraLib.Models.FieldChangedClause();
            result.FieldValueClause = new JiraLib.Models.FieldValueClause();
            result.FieldWasClause = new JiraLib.Models.FieldWasClause();
            result.JqlQueryClauseCompoundClause = new JiraLib.Models.CompoundClause();
            result.JqlQueryClauseFieldChangedClause = new JiraLib.Models.FieldChangedClause();
            result.JqlQueryClauseFieldValueClause = new JiraLib.Models.FieldValueClause();
            result.JqlQueryClauseFieldWasClause = new JiraLib.Models.FieldWasClause();
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(CompoundClause != null || FieldChangedClause != null || FieldValueClause != null || FieldWasClause != null || JqlQueryClauseCompoundClause != null || JqlQueryClauseFieldChangedClause != null || JqlQueryClauseFieldValueClause != null || JqlQueryClauseFieldWasClause != null)
            {
                return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(CompoundClause, FieldChangedClause, FieldValueClause, FieldWasClause, JqlQueryClauseCompoundClause, JqlQueryClauseFieldChangedClause, JqlQueryClauseFieldValueClause, JqlQueryClauseFieldWasClause);
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraLib.Models.CompoundClause>(null, CompoundClause, FieldChangedClause, FieldValueClause, FieldWasClause, JqlQueryClauseCompoundClause, JqlQueryClauseFieldChangedClause, JqlQueryClauseFieldValueClause, JqlQueryClauseFieldWasClause);
        }
    }
}
