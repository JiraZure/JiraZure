// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// The metadata describing an issue field for createmeta.
    /// </summary>
    public class FieldCreateMetadata : IParsable 
    {
        /// <summary>The list of values allowed in the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? AllowedValues { get; private set; }
#nullable restore
#else
        public UntypedNode AllowedValues { get; private set; }
#endif
        /// <summary>The URL that can be used to automatically complete the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutoCompleteUrl { get; private set; }
#nullable restore
#else
        public string AutoCompleteUrl { get; private set; }
#endif
        /// <summary>The configuration properties.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public FieldCreateMetadata_configuration? Configuration { get; private set; }
#nullable restore
#else
        public FieldCreateMetadata_configuration Configuration { get; private set; }
#endif
        /// <summary>The default value of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? DefaultValue { get; private set; }
#nullable restore
#else
        public UntypedNode DefaultValue { get; private set; }
#endif
        /// <summary>The field id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FieldId { get; private set; }
#nullable restore
#else
        public string FieldId { get; private set; }
#endif
        /// <summary>Whether the field has a default value.</summary>
        public bool? HasDefaultValue { get; private set; }
        /// <summary>The key of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Key { get; private set; }
#nullable restore
#else
        public string Key { get; private set; }
#endif
        /// <summary>The name of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The list of operations that can be performed on the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Operations { get; private set; }
#nullable restore
#else
        public List<string> Operations { get; private set; }
#endif
        /// <summary>Whether the field is required.</summary>
        public bool? Required { get; private set; }
        /// <summary>The data type of the field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JsonTypeBean? Schema { get; private set; }
#nullable restore
#else
        public JsonTypeBean Schema { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="FieldCreateMetadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static FieldCreateMetadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new FieldCreateMetadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"allowedValues", n => { AllowedValues = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                {"autoCompleteUrl", n => { AutoCompleteUrl = n.GetStringValue(); } },
                {"configuration", n => { Configuration = n.GetObjectValue<FieldCreateMetadata_configuration>(FieldCreateMetadata_configuration.CreateFromDiscriminatorValue); } },
                {"defaultValue", n => { DefaultValue = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                {"fieldId", n => { FieldId = n.GetStringValue(); } },
                {"hasDefaultValue", n => { HasDefaultValue = n.GetBoolValue(); } },
                {"key", n => { Key = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"operations", n => { Operations = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"required", n => { Required = n.GetBoolValue(); } },
                {"schema", n => { Schema = n.GetObjectValue<JsonTypeBean>(JsonTypeBean.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
        }
    }
}
