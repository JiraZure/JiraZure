// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// Number of archived/unarchived issues and list of errors that occurred during the action, if any.
    /// </summary>
    public class IssueArchivalSyncResponse : IParsable 
    {
        /// <summary>The errors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraLib.Models.Errors? Errors { get; set; }
#nullable restore
#else
        public JiraLib.Models.Errors Errors { get; set; }
#endif
        /// <summary>The numberOfIssuesUpdated property</summary>
        public long? NumberOfIssuesUpdated { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="IssueArchivalSyncResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static IssueArchivalSyncResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new IssueArchivalSyncResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"errors", n => { Errors = n.GetObjectValue<JiraLib.Models.Errors>(JiraLib.Models.Errors.CreateFromDiscriminatorValue); } },
                {"numberOfIssuesUpdated", n => { NumberOfIssuesUpdated = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraLib.Models.Errors>("errors", Errors);
            writer.WriteLongValue("numberOfIssuesUpdated", NumberOfIssuesUpdated);
        }
    }
}
