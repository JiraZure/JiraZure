// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace JiraLib.Models {
    /// <summary>
    /// The result of evaluating a Jira expression.
    /// </summary>
    public class JiraExpressionResult : IParsable 
    {
        /// <summary>Contains various characteristics of the performed expression evaluation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public JiraExpressionEvaluationMetaDataBean? Meta { get; set; }
#nullable restore
#else
        public JiraExpressionEvaluationMetaDataBean Meta { get; set; }
#endif
        /// <summary>The value of the evaluated expression. It may be a primitive JSON value or a Jira REST API object. (Some expressions do not produce any meaningful results—for example, an expression that returns a lambda function—if that&apos;s the case a simple string representation is returned. These string representations should not be relied upon and may change without notice.)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Value { get; set; }
#nullable restore
#else
        public UntypedNode Value { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="JiraExpressionResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static JiraExpressionResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new JiraExpressionResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"meta", n => { Meta = n.GetObjectValue<JiraExpressionEvaluationMetaDataBean>(JiraExpressionEvaluationMetaDataBean.CreateFromDiscriminatorValue); } },
                {"value", n => { Value = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<JiraExpressionEvaluationMetaDataBean>("meta", Meta);
            writer.WriteObjectValue<UntypedNode>("value", Value);
        }
    }
}
